package Practice4.oseminar;

import Practice4.oseminar.data.StudentGirl;
import Practice4.oseminar.view.StudentView;

import java.util.List;

public class HomeWork6 {

    /**
     * Взять реализованный код в рамках семинара 4 и продемонстрировать применение принципов, усвоенных на семинаре.
     * Нужно в проекте прокомментировать участки кода, которые рефакторим, какой принцип применяем и почему
     * <p>
     * Принципы SOLID:
     * 1 - Принцип единой ответственности (Один класс - одна задача/ответственность)
     * 2 - Принцип закрытости/открытости (Объекты программирования должны быть открыты для расширения, но закрыты для модификации)
     * 3 - Принцип заменяемости (Имеется возможность использовать любой производный класс вместо родительского без изменений)
     * 4 - Принцип разделения интерфейсов (Слишком толстые интерфейсы необходимо разделять на более мелкие, чтобы клиенты маленьких
     * интерфейсов знали только о методах, которые необходимы им в работе)
     * 5 - Принцип инверсии зависимости (Все зависимости в программе должны поддерживаться с помощью абстрактных классов или интерфейсов)
     */

    public static void main(String[] args) {
        /**
         * Создал класс StudentGirl, который расширяет функционал класса Student соответствует принципу 2.
         * Сделав перегрузку метода toString, его можно использовать вместо родительского, что реализует принцип 3.
         */

        StudentGirl studentGirl1 = new StudentGirl("Fn", "Sn", "Pn", "16.05.1997", "Mn");
        StudentView studentView = new StudentView();
        studentView.sendOnConsole(List.of(studentGirl1));

        /**
         * Можно сделать много аналогичных расширений. Так же пытался разделить классы по 1 принципу, но не нашел нечего подходящего.
         * Я еще плаваю в данной теме и не очень хорошо ее усвоил. Java не мой профиль. Надеюсь этого хватит для сдачи ДЗ, пускай даже
         * и не на отлично.
         */
    }
}
